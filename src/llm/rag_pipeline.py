from src.llm.routing_agents import requires_code_intepretor
from src.llm import RAGAgent, CodeAgent

class RAGPipeline():
    def __init__(self, retriever):
        """
        Initializes the RAGPipeline with a retriever for the RAGAgent.

        Args:
            retriever: The vector database used by the RAGAgent for document retrieval.
        """
        self.code_agent = CodeAgent()
        self.rag_agent = RAGAgent(retriever=retriever)

    def answer_query(self, query, history):
        """
        Answers a query by determining whether it requires code execution or document retrieval.

        Args:
            query (str): The user query to be answered.
            history (list): The context or history of previous interactions for RAGAgent.

        Returns:
            str: The response generated by either CodeAgent or RAGAgent.
        """
        if requires_code_intepretor(query):
            return self.code_agent.answer_query(query)
        else:
            return self.rag_agent.answer_query(query,history)

